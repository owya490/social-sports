rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Only allow users to write to their own Userdata fields. Anyone can read.
    match /Users/{activeModifier}/Public/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Only allow users to read and write their own private Userdata fields.
    match /Users/{activeModifier}/Private/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Only organisers can write to their EventData fields. Everyone can read.
    match /Events/{activeModifier}/{accessModifier}/{eventId} {
      allow read: if true;
      allow write: if request.auth != null 
      && request.auth.uid == get(/databases/$(database)/documents/Events/$(activeModifier)/$(accessModifier)/$(eventId)).data.organiserId;
    }

    // Only events organisers can read and write to their Events metadata fields
    match /EventsMetadata/{eventId} {
      allow read, write: if request.auth != null 
      && request.auth.uid == get(/databases/$(database)/documents/EventsMetadata/$(eventId)).data.organiserId;
    }

    // No one can access the Attendees Table
    match /Attendees/emails/{emailHash}/{eventId} {
      allow read, write: if false;
    }

    // Everyone can read Orders Table if they have the correct id. No one can overwrite and mutate exsiting data
    match /Orders/{orderId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/Orders/$(orderId)).data == null;
    }

    // Everyone can read Tickets Table if they have the correct id. No one can overwrite and mutate exsiting data
    match /Tickets/{ticketId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/Tickets/$(ticketId)).data == null;
    }
  }
}

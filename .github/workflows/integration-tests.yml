name: Integration Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

env:
  set_dev_env_variables: |
    cd frontend
    touch .env
    echo FIREBASE_DEV_API_KEY=${{ secrets.FIREBASE_DEV_API_KEY }} >> .env
    echo FIREBASE_DEV_AUTH_DOMAIN=${{ secrets.FIREBASE_DEV_AUTH_DOMAIN }} >> .env
    echo FIREBASE_DEV_DATABASE_URL=${{ secrets.FIREBASE_DEV_DATABASE_URL }} >> .env
    echo FIREBASE_DEV_PROJECT_ID=${{ secrets.FIREBASE_DEV_PROJECT_ID }} >> .env
    echo FIREBASE_DEV_STORAGE_BUCKET=${{ secrets.FIREBASE_DEV_STORAGE_BUCKET }} >> .env
    echo FIREBASE_DEV_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_DEV_MESSAGING_SENDER_ID }} >> .env
    echo FIREBASE_DEV_APP_ID=${{ secrets.FIREBASE_DEV_APP_ID }} >> .env
    echo FIREBASE_DEV_MEASUREMENT_ID=${{ secrets.FIREBASE_DEV_MEASUREMENT_ID }} >> .env

jobs:
  frontend-integration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Create environment file
        run: ${{ env.set_dev_env_variables }}

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run linting
        run: cd frontend && npm run lint

      - name: Run unit tests
        run: cd frontend && npm run test:ci

      - name: Run integration tests
        run: cd frontend && npm run test:integration

      - name: Run performance tests
        run: cd frontend && npm run test:performance

  backend-integration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Java integration tests
        run: cd functions/lib/functions && mvn clean test

      - name: Generate test report
        run: cd functions/lib/functions && mvn surefire-report:report

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [frontend-integration-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Create environment file
        run: ${{ env.set_dev_env_variables }}

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Build application
        run: cd frontend && npm run build

      - name: Start application
        run: cd frontend && npm start &

      - name: Wait for application to be ready
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Cypress E2E tests
        run: cd frontend && npm run test:e2e

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: frontend/cypress/videos

  test-summary:
    runs-on: ubuntu-latest
    needs: [frontend-integration-tests, backend-integration-tests, e2e-tests]
    if: always()

    steps:
      - name: Test Summary
        run: |
          echo "## 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend Integration | ${{ needs.frontend-integration-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend Integration | ${{ needs.backend-integration-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result }} |" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.frontend-integration-tests.result }}" == "success" && 
                "${{ needs.backend-integration-tests.result }}" == "success" && 
                "${{ needs.e2e-tests.result }}" == "success" ]]; then
            echo "✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed. Please check the logs above." >> $GITHUB_STEP_SUMMARY
          fi

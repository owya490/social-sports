name: Deploy cloud functions to Cloud Run for socialsportsprod

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  deploy-java-cloud-run-functions:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.SOCIALSPORTSPROD_GCLOUD_CREDENTIALS }}

      # Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: socialsportsprod

      # Authenticate Docker with Google Container Registry
      - name: Authenticate Docker
        run: |
          gcloud auth configure-docker

      - name: Create functions_key.json from base64-encoded secret
        working-directory: functions/lib/functions
        run: |
          echo '${{ secrets.SOCIALSPORTSPROD_FUNCTIONS_KEY_JSON_BASE64_ENCODED }}' | base64 -d > functions_key.json

      # The following functions_key.json and .env variables are required for our java cloud run functions
      - name: Set .env variables
        working-directory: functions/lib/functions
        run: |
          echo "STRIPE_API_KEY=\"${{ secrets.SOCIALSPORTSPROD_STRIPE_API_KEY }}\"" >> .env
          echo "STRIPE_WEBHOOK_ENDPOINT_SECRET=\"${{ secrets.SOCIALSPORTSPROD_STRIPE_WEBHOOK_ENDPOINT_SECRET }}\"" >> .env
          echo "POSTHOG_API_KEY=\"${{ secrets.SOCIALSPORTSPROD_POSTHOG_API_KEY }}\"" >> .env
          echo "BEARER_TOKEN=\"${{ secrets.SOCIALSPORTSPROD_BEARER_TOKEN }}\"" >> .env
          echo "SENDGRID_API_KEY=\"${{ secrets.SOCIALSPORTSPROD_SENDGRID_API_KEY }}\"" >> .env

      # Deploy java cloud run functions
      - name: Deploy updateRecurrenceTemplate
        working-directory: functions/lib/functions
        run: |
          gcloud functions deploy updateRecurrenceTemplate \
            --entry-point com.functions.events.controllers.UpdateRecurrenceTemplateEndpoint \
            --runtime java17 \
            --trigger-http \
            --allow-unauthenticated \
            --region australia-southeast1 \
            --project socialsportsprod \
            --set-env-vars PROJECT_NAME=socialsportsprod

      - name: Deploy createRecurrenceTemplate
        working-directory: functions/lib/functions
        run: |
          gcloud functions deploy createRecurrenceTemplate \
            --entry-point com.functions.events.controllers.CreateRecurrenceTemplateEndpoint \
            --runtime java17 \
            --trigger-http \
            --allow-unauthenticated \
            --region australia-southeast1 \
            --project socialsportsprod \
            --set-env-vars PROJECT_NAME=socialsportsprod

      - name: Deploy recurringEventsCron
        working-directory: functions/lib/functions
        run: |
          gcloud functions deploy recurringEventsCron \
            --entry-point com.functions.events.controllers.RecurringEventsCronEndpoint \
            --runtime java17 \
            --trigger-http \
            --allow-unauthenticated \
            --region australia-southeast1 \
            --project socialsportsprod \
            --set-env-vars PROJECT_NAME=socialsportsprod \
            --memory 512

      - name: Deploy createEvent
        working-directory: functions/lib/functions
        run: |
          gcloud functions deploy createEvent \
            --entry-point com.functions.events.controllers.CreateEventEndpoint \
            --runtime java17 \
            --trigger-http \
            --allow-unauthenticated \
            --region australia-southeast1 \
            --project socialsportsprod \
            --set-env-vars PROJECT_NAME=socialsportsprod

  deploy-python-firebase-functions:
    name: Deploy Python Firebase Functions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.SOCIALSPORTSPROD_GCLOUD_CREDENTIALS }}

      # Install Node.js and Firebase CLI
      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      # Install Python 3.12
      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # Set up Python environment and install dependencies
      - name: Set up Python environment
        working-directory: functions
        run: |
          python3.12 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Set up Firebase CLI
        env:
          GCP_SA_KEY: ${{ secrets.SOCIALSPORTSPROD_GCLOUD_CREDENTIALS }}
        uses: w9jds/firebase-action@v2.2.2
        with:
          args: projects:list

      # The following functions_key.json and .env variables are required for our python firebase functions
      - name: Create functions_key.json from base64-encoded secret
        working-directory: functions
        run: |
          echo '${{ secrets.SOCIALSPORTSPROD_FUNCTIONS_KEY_JSON_BASE64_ENCODED }}' | base64 -d > functions_key.json

      - name: Set .env variables
        working-directory: functions
        run: |
          echo "STRIPE_API_KEY=\"${{ secrets.SOCIALSPORTSPROD_STRIPE_API_KEY }}\"" >> .env
          echo "STRIPE_WEBHOOK_ENDPOINT_SECRET=\"${{ secrets.SOCIALSPORTSPROD_STRIPE_WEBHOOK_ENDPOINT_SECRET }}\"" >> .env
          echo "POSTHOG_API_KEY=\"${{ secrets.SOCIALSPORTSPROD_POSTHOG_API_KEY }}\"" >> .env
          echo "BEARER_TOKEN=\"${{ secrets.SOCIALSPORTSPROD_BEARER_TOKEN }}\"" >> .env
          echo "SENDGRID_API_KEY=\"${{ secrets.SOCIALSPORTSPROD_SENDGRID_API_KEY }}\"" >> .env

      - name: Set firebase project
        working-directory: functions
        run: |
          firebase use --add socialsportsprod

      - name: Deploy all python functions
        working-directory: functions
        run: |
          firebase deploy --only functions:move_inactive_events
